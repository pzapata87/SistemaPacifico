@model SistemaPacifico.Models.PropuestaSolucionViewModel

@{
    ViewBag.Title = "CrearPropuesta";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div>

        <hr />
        @Html.ValidationSummary(true)
        <table width="85%" class="fondo" align="center">
            <tr>
                <td>
                    @Html.LabelFor(model => model.DNIProspecto, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.TextBoxFor(model => model.CodigoProspecto, new { @class = "hidden" })
                    @Html.TextBoxFor(model => model.DNIProspecto, new { @class = "form-control" })
                </td>
                <td>
                    <input id="btnBuscar" type="button" value="Buscar" class="btn btn-default" />
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.NombreProspecto, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.TextBoxFor(model => model.NombreProspecto, new { @class = "form-control", disabled = "true" })
                </td>
                <td>
                    @Html.LabelFor(model => model.ApellidoProspecto, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.TextBoxFor(model => model.ApellidoProspecto, new { @class = "form-control", disabled = "true"})
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.TextBoxFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "form-control" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CodigoProducto, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownListFor(model => model.CodigoProducto, Model.Productos, htmlAttributes: new { @class = "form-control" })
                </td>
                <td>
                    @Html.LabelFor(model => model.CodigoPlan, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.DropDownListFor(model => model.CodigoPlan, Model.PlanProductos, htmlAttributes: new { @class = "form-control" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.MontoAsegurado, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.TextBoxFor(model => model.MontoAsegurado, htmlAttributes: new { @class = "form-control" })
                </td>
                <td>
                    @Html.LabelFor(model => model.MontoPrima, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.TextBoxFor(model => model.MontoPrima, htmlAttributes: new { @class = "form-control", disabled = "true" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.MontoRetorno, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.TextBoxFor(model => model.MontoRetorno, htmlAttributes: new { @class = "form-control", disabled = "true" })
                </td>
                <td>
                    <input id="btnGenerarPropuesta" type="button" value="Generar Propuesta" class="btn btn-default" disabled="disabled" />
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <br />
                    <div data-bind='simpleGrid: gridViewModel'> </div>
                </td>
            </tr>
            <tr>
                <td colspan="6" align="center">
                    <input id="btnGrabar" type="button" value="Grabar" class="btn btn-default" />
                    <input type="submit" value="Cancelar" class="btn btn-default" />
                </td>
                <td></td>
            </tr>
        </table>
    </div>
}


<script type="text/javascript">
    var initialData = [];

    var PagedGridModel = function (items) {
        this.items = ko.observableArray(items);

        this.addItem = function (anio, edad, montoPrima, montoAhorro, valorRescate, montoAsegurado) {
            this.items.push({ Nu_Anio: anio, Nu_Edad: edad, Ss_MontoPrima: montoPrima, Ss_MontoAhorro: montoAhorro, Ss_ValorRescate: valorRescate, Ss_MontoAsegurado: montoAsegurado });
        };

        this.clearData = function () {
            this.items.removeAll();
        };

        this.sortByName = function () {
            this.items.sort(function (a, b) {
                return a.name < b.name ? -1 : 1;
            });
        };

        this.jumpToFirstPage = function () {
            this.gridViewModel.currentPageIndex(0);
        };

        this.gridViewModel = new ko.simpleGrid.viewModel({
            data: this.items,
            columns: [
                { headerText: "Año", rowText: "Nu_Anio" },
                { headerText: "Edad", rowText: "Nu_Edad" },
                { headerText: "Monto prima", rowText: "Ss_MontoPrima" },
                { headerText: "Monto Ahorro", rowText: "Ss_MontoAhorro" },
                { headerText: "Valor Rescate", rowText: "Ss_ValorRescate" },
                { headerText: "Monto Asegurado", rowText: "Ss_MontoAsegurado" }
            ],
            pageSize: 100
        });
    };

    var modeloGrilla = new PagedGridModel(initialData);
    ko.applyBindings(modeloGrilla);
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#CodigoPlan").prop("disabled", true);
        $('#btnGenerarPropuesta').click(function () {
            GenerarPropuesta();
        });

        $('#btnGrabar').click(function () {
            Grabar();
        });

        $('#FechaNacimiento').datepicker();
    });

    $("#CodigoProducto").change(function () { obtenerPlan(); });
    $("#FechaNacimiento").change(function () { ValidarEdad(); });

    $("#btnBuscar").click(function () { obtenerProspecto(); });
        function obtenerProspecto()
        {
            var dni = $("#DNIProspecto").val();

            var request = $.ajax({
                url: "/PacificoService/ObtenerProspecto",
                type: "GET",
                data: { numeroDNI: dni },
                dataType: "json",
                contentType: "text/plain"
            });
            request.done(function (msg) {
                if (msg.Co_Prospecto != "") {
                    $("#CodigoProspecto").val(msg.Co_Prospecto);
                    $("#NombreProspecto").val(msg.No_Prospecto);
                    $("#ApellidoProspecto").val(msg.Tx_ApePaterno + " " + msg.Tx_ApeMaterno);
                    $("#btnGenerarPropuesta").prop("disabled", false);
                }
                else
                {
                    $("#CodigoProspecto").val("");
                    $("#NombreProspecto").val("");
                    $("#ApellidoProspecto").val("");
                    $("#btnGenerarPropuesta").prop("disabled", true);
                    alert("DNI Inválido");
                }
            });
            request.fail(function (jqXHR, textStatus) {
                alert("Request failed: " + textStatus);
            });
        }

        function obtenerPlan() {
            var codProducto = $("#CodigoProducto").val();

            var request = $.ajax({
                url: "/PacificoService/ObtenerPlanProducto",
                type: "GET",
                data: { codigoProducto: codProducto },
                dataType: "json",
                contentType: "text/plain"
            });
            request.done(function (data) {
                var item = "";
                $("#CodigoPlan").html("");
                $.each(data, function (key, value) {
                    item = item + "<option value=" + value.Codigo + ">" + value.Value + "</option>";
                });
                $("#CodigoPlan").html(item);
                if (data.length == 0)
                    $( "#CodigoPlan" ).prop( "disabled", true );
                else
                    $("#CodigoPlan").prop("disabled", false);
            });
            request.fail(function (jqXHR, textStatus) {
                debugger;
                alert("Request failed: " + textStatus);
            });
        }

        function GenerarPropuesta() {
            var montoPrima = $("#MontoPrima").val();
            var montoAsegurado = $("#MontoAsegurado").val();

            var request = $.ajax({
                url: "/PacificoService/ObtenerDetalle",
                type: "GET",
                data: { montoPrima: montoPrima, montoAsegurado: montoAsegurado, edad: 30 },
                dataType: "json",
                contentType: "text/plain"
            });
            request.done(function (data) {
                modeloGrilla.clearData();
                for (var i in data) {
                    var detalle = data[i];

                    modeloGrilla.addItem(detalle.Nu_Anio, detalle.Nu_Edad, detalle.Ss_MontoPrima, detalle.Ss_MontoAhorro,detalle.Ss_ValorRescate,detalle.Ss_MontoAsegurado);
                }
            });
            request.fail(function (jqXHR, textStatus) {
                debugger;
                alert("Request failed: " + textStatus);
            });
        }

        function Grabar() {
            
            var codigoProspecto = $("#CodigoProspecto").val();
            var fechaNacimiento = $("#FechaNacimiento").val();
            var codigoProducto = $("#CodigoProducto").val();
            var codigoPlan = $("#CodigoPlan").val();
            var montoAsegurado = $("#MontoAsegurado").val();
            var montoPrima = $("#MontoPrima").val();
            var montoRetorno = $("#MontoRetorno").val();

            var propuesta = {};
            propuesta.CodigoProspecto = codigoProspecto;
            propuesta.FechaNacimiento = fechaNacimiento;
            propuesta.CodigoProducto = codigoProducto;
            propuesta.CodigoPlan = codigoPlan;
            propuesta.MontoAsegurado = montoAsegurado;
            propuesta.MontoPrima = montoPrima;
            propuesta.MontoRetorno = montoRetorno;
            propuesta.Detalle = modeloGrilla.items();

            var request = $.ajax({
                url: "/PropuestaSolucion/CrearPropuesta",
                data: JSON.stringify(propuesta),
                contentType: 'application/json',
                dataType: 'json',
                type: 'post'
            });
            request.done(function (data) {
                $("#labelSuccess").show();
                window.location.href = data;
            });
            request.fail(function (jqXHR, textStatus) {
                alert("Request failed: " + textStatus);
            });
        }
</script>